--- xkobo-1.11/map.h.old	2009-06-15 20:42:15.756238318 -0400
+++ xkobo-1.11/map.h	2009-06-15 20:43:30.449564382 -0400
@@ -38,10 +38,10 @@
 #define HIT_MASK       (CORE | U_MASK | R_MASK | D_MASK | L_MASK)
 
 class _map{
-    const int sx_log2 = MAP_SIZEX_LOG2;
-    const int sy_log2 = MAP_SIZEY_LOG2;
-    const int sx = 1 << sx_log2;
-    const int sy = 1 << sy_log2;
+    static const int sx_log2 = MAP_SIZEX_LOG2;
+    static const int sy_log2 = MAP_SIZEY_LOG2;
+    static const int sx = 1 << sx_log2;
+    static const int sy = 1 << sy_log2;
     int sitex[SITE_MAX];
     int sitey[SITE_MAX];
     int site_max;
--- xkobo-1.11/xkobo.C.old	2009-06-15 20:43:56.626227950 -0400
+++ xkobo-1.11/xkobo.C	2009-06-15 20:45:29.656429086 -0400
@@ -51,7 +51,7 @@
 
 static int      signal_delivered = 1;
 
-static void sig_handle(...)
+static void sig_handle(int)
 {
     signal_delivered = 1;
 }
--- xkobo-1.11/enemies.h.old	2009-06-15 20:53:43.352835966 -0400
+++ xkobo-1.11/enemies.h	2009-06-15 20:56:22.449489554 -0400
@@ -62,7 +62,7 @@
 extern const enemy_kind cannon;
 extern const enemy_kind pipe1;
 extern const enemy_kind core;
-extern const enemy_kind pipe2;
+extern const enemy_kind pipe2_xk;
 extern const enemy_kind rock;
 extern const enemy_kind ring;
 extern const enemy_kind enemy_m1;
@@ -121,8 +121,8 @@
     void move_core();
     void make_pipe1();
     void move_pipe1();
-    void make_pipe2();
-    void move_pipe2();
+    void make_pipe2_xk();
+    void move_pipe2_xk();
     void make_enemy1();
     void move_enemy1();
     void make_enemy2();
@@ -209,10 +209,10 @@
         state = notuse;
     }
     else if (ek == &core){
-        enemies.make(&pipe2, x>>SHIFT, y>>SHIFT, 0, 0, 3);
-        enemies.make(&pipe2, x>>SHIFT, y>>SHIFT, 0, 0, 7);
-        enemies.make(&pipe2, x>>SHIFT, y>>SHIFT, 0, 0, 1);
-        enemies.make(&pipe2, x>>SHIFT, y>>SHIFT, 0, 0, 5);
+        enemies.make(&pipe2_xk, x>>SHIFT, y>>SHIFT, 0, 0, 3);
+        enemies.make(&pipe2_xk, x>>SHIFT, y>>SHIFT, 0, 0, 7);
+        enemies.make(&pipe2_xk, x>>SHIFT, y>>SHIFT, 0, 0, 1);
+        enemies.make(&pipe2_xk, x>>SHIFT, y>>SHIFT, 0, 0, 5);
         enemies.make(&explosion, x>>SHIFT, y>>SHIFT);
         state = notuse;
         manage.destroyed_a_core();
@@ -304,7 +304,7 @@
 
 inline int _enemy::is_pipe()
 {
-    return ((state != notuse) && ((ek == &pipe1) || (ek == &pipe2)));
+    return ((state != notuse) && ((ek == &pipe1) || (ek == &pipe2_xk)));
 }
 
 
--- xkobo-1.11/enemy.C.old	2009-06-15 20:56:44.456152021 -0400
+++ xkobo-1.11/enemy.C	2009-06-15 20:57:10.629690915 -0400
@@ -521,10 +521,10 @@
 
 /*
  * ===========================================================================
- *                                pipe2
+ *                                pipe2_xk
  * ===========================================================================
  */
-void _enemy::make_pipe2()
+void _enemy::make_pipe2_xk()
 {
     int x1 = ((x>>SHIFT) & (SCREEN_SIZEX-1))>>4;
     int y1 = ((y>>SHIFT) & (SCREEN_SIZEY-1))>>4;
@@ -554,7 +554,7 @@
       }
     }
 }
-void _enemy::move_pipe2()
+void _enemy::move_pipe2_xk()
 {
     if ((norm < ((WSIZE>>1)+32)) && (count == 1))
         enemies.make(&explosion, (x>>SHIFT)+rand_num.get(4)-8,
@@ -612,20 +612,20 @@
     p ^= a;
     int a=0, b=0, c=0, d=0;
     if (p & U_MASK)
-      a=enemies.make(&pipe2, (x>>SHIFT), (y>>SHIFT), 0, 0, 1);
+      a=enemies.make(&pipe2_xk, (x>>SHIFT), (y>>SHIFT), 0, 0, 1);
     if (p & R_MASK)
-      b=enemies.make(&pipe2, (x>>SHIFT), (y>>SHIFT), 0, 0, 3);
+      b=enemies.make(&pipe2_xk, (x>>SHIFT), (y>>SHIFT), 0, 0, 3);
     if (p & D_MASK)
-      c=enemies.make(&pipe2, (x>>SHIFT), (y>>SHIFT), 0, 0, 5);
+      c=enemies.make(&pipe2_xk, (x>>SHIFT), (y>>SHIFT), 0, 0, 5);
     if (p & L_MASK)
-      d=enemies.make(&pipe2, (x>>SHIFT), (y>>SHIFT), 0, 0, 7);
+      d=enemies.make(&pipe2_xk, (x>>SHIFT), (y>>SHIFT), 0, 0, 7);
     manage.add_score(10);
     state = notuse;
 }
-const enemy_kind pipe2 = {
+const enemy_kind pipe2_xk = {
     0,
-    &_enemy::make_pipe2,
-    &_enemy::move_pipe2,
+    &_enemy::make_pipe2_xk,
+    &_enemy::move_pipe2_xk,
     -1,
     0, 0,
     0,
